==================
Master programming
==================

----------------
Домашнее задание
----------------

:Author: Игорь Шаронов
:Date: 2019-09-01

Описание домашней работы
========================

Из чего состоят задания
-----------------------

* Домашнее задание <=> лабораторные работы
* 6 заданий на написание кода

  * 2 задания имеют одну подзадачу

* 1 задание на написание теста
* всего 8 заданий по 12 баллов каждое
* 23 вопроса по 0.5 балла
* 5 дополнительных вопросов (плавающая оценка)
* 3 дополнительных задания на самостоятельную работу

Порядок сдачи лабораторной работы
---------------------------------

* Создаём пулл-реквест со сделанной и протестированной лабораторной
* Вешаем его на ``igsha``
* Получаем список замечаний
* Исправляем замечания поверх старого кода, без добавления коммита::

   git commit -a --ament
   git push --force

* Получаем новые замечания и идём на предыдущий пункт
* Если всё в порядке, ``igsha`` примет пулл-реквест и замёржит изменения в мастер
* В комментарии будет количество набранных баллов:

  * Если всё исправлено и замечаний больше нет, то максимальное количество баллов
  * Возможен торг: некоторые замечания можно не исправлять, тогда просто снизится количество баллов
  * За просрок баллы нельзя добрать, только с помощью ответов на вопросы

Снижение баллов
---------------

* Каждая лабораторная сдаётся в течение 2-х недель
* По истечении срока максимальный балл **каждый раз** снижается на 1
* Меньше 6 баллов за лабораторную нельзя получить

  * Если такая ситуация возникает, торговаться уже не получится: надо исправить **все** замечания

* Замечания к лабораторным:

  * Критичные --- какая-то функциональность сделана неправильно (торг не уместен)
  * Некритичные (nit-pick) --- что-то можно сделать удобнее/лучше/нагляднее (торг уместен)

Инициализация репозитория
=========================

Использование шаблона для репозитория
-------------------------------------

* https://github.com/cvlabmiet/master-programming-task --- отсюда брать шаблон репозитория
* Использовать ``Use this template``

.. image:: use-template.png

Приватность работы
------------------

* Домашняя работа должна быть изолирована
* Достигается приватностью репозитория

.. image:: private-repo.png

Настройка слияний веток
-----------------------

* Каждая лабораторная делается в своей ветке
* Допускается только рибейз веток
* **Не допускаются коммиты напрямую в мастер**

.. image:: merge-settings.png

Настройка непрерывной интеграции
================================

Регистрация в CircleCI
----------------------

* Для проверки собираемости заданий используется сервис непрерывной интеграции CircleCI
* Регистрация через github-аккаунт на сайте https://circleci.com
* Позволить видеть все репозитории, так как наш будет приватным

.. image:: circleci-signup.png

Подписка на проект
------------------

* Чтобы заработали триггеры, нужно подписаться на проект

.. image:: circleci-setup-project.png

Настройка триггеров
-------------------

* github предоставляет триггеры, можно выбрать на какие реагировать
* По умолчанию CircleCI будет собирать только мастер
* Нам нужно собирать только PR (pull request)

.. image:: circleci-project-settings.png

Интеграция в пулл-реквесты
==========================

Автоматическая проверка
-----------------------

* Если всё настроено правильно, то при очередном пулл-реквесте будет информация о сборке проекта
* Автоматическая сборка исходников на базе docker
* Автоматический запуск тестов
* Невозможность слияния веток в мастер при наличии ошибок

.. image:: failed-task.png

Добавление проверяющего
-----------------------

* Необходимо предоставить совместный доступ ``igsha`` к своему репозиторию
* После этого можно будет назначать ``igsha`` проверяющим пулл-реквесты

.. image:: add-collaborator.png

Пример пулл-реквеста
--------------------

* В настройках пользователя написать своё имя (либо в сообщении пулл-реквеста)
* В тело сообщения вставить лог прохождения тестов
* В reviewers или assignees назначить ``igsha``
* Все автоматические проверки должны быть успешно пройдены

.. image:: successed-task.png
